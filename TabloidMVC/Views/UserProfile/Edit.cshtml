@model TabloidMVC.Models.ViewModels.UserProfileFormViewModel

@{
    ViewData["Title"] = "Edit";
}

    
<h1>Edit</h1>
<h4>User Profile for @Model.User.FullName </h4>
<hr />
<div class="row">
    
        <section class="container">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="col-md-4">
                <div class="form-group">
                    <input asp-for="User.Id" type="hidden" />
                </div>
                <img style="width:150px;float:left;margin-right:20px"
                     src=@Model.User.GetImage() />
                     </div>
            <div class="col-md-4">
                <div>
                    <label class="fw-bold">@Html.DisplayNameFor(model => model.User.FullName):</label>
                    <span>@Html.DisplayFor(model => model.User.FullName)</span>
                </div>
                <div>
                    <label class="fw-bold">@Html.DisplayNameFor(model => model.User.DisplayName):</label>
                    <span>@Html.DisplayFor(model => model.User.DisplayName)</span>
                </div>
                <div>
                    <label class="fw-bold">@Html.DisplayNameFor(model => model.User.Email):</label>
                    <span>@Html.DisplayFor(model => model.User.Email)</span>
                </div>
                <div>
                    <label class="fw-bold">@Html.DisplayNameFor(model => model.User.CreateDateTime):</label>
                    <span>@Html.DisplayFor(model => model.User.CreateDateTime)</span>
                </div>
                <div>
                    <label class="fw-bold">@Html.DisplayNameFor(model => model.User.UserStatus.Name):</label>
                    <span>@Html.DisplayFor(model => model.User.UserStatus.Name)</span>
                </div>
                <div class="form-group mb-4">
                    <label class="control-label fw-bold">@Html.DisplayNameFor(model => model.User.UserTypeId):</label>
                    <select asp-for="User.UserTypeId" class=" form-control">
                        <option value="" defaultValue="@Model.User.UserTypeId">Select User Type</option>
                        @foreach (UserType userType in Model.UserTypes)
                        {
                            <option value="@userType.Id">@userType.Name</option>
                        }
                    </select>
                    <span asp-validation-for="User.UserTypeId" class="text-danger"></span>
                </div>
            </div>
           
                <div class="form-group">
                     @if (Model.Admins.Contains(Model.Admins.Find(i => i.Id == Model.User.Id)) && Model.Admins.Count == 1)
            {
                    <p>There must be at least one active administrator at all times. Please make another user an administrator or reactivate a deactivated administrator before removing administrator priveleges from @Model.User.FullName</p>
            }
            else
            {
                    <input type="submit" value="Save" class="btn btn-primary" />
            }
                    <a asp-action="Index">Back to List</a>

                </div>
           
           
        </form>
        </section>
   
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
